# Production values for MOSDAC AI Navigator
global:
  imageRegistry: "ghcr.io"
  imagePullSecrets:
    - name: registry-secret
  storageClass: "gp3"

app:
  environment: production

backend:
  replicaCount: 5
  
  image:
    tag: "v1.0.0"
    
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/rate-limit: "100"
    hosts:
      - host: api.mosdac-ai.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: api-mosdac-ai-tls
        hosts:
          - api.mosdac-ai.com
          
  resources:
    limits:
      cpu: 4000m
      memory: 8Gi
    requests:
      cpu: 2000m
      memory: 4Gi
      
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 20
    targetCPUUtilizationPercentage: 60
    targetMemoryUtilizationPercentage: 70
    
  env:
    - name: ENVIRONMENT
      value: "production"
    - name: LOG_LEVEL
      value: "INFO"
    - name: PROMETHEUS_ENABLED
      value: "true"

frontend:
  replicaCount: 3
  
  image:
    tag: "v1.0.0"
    
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - host: mosdac-ai.com
        paths:
          - path: /
            pathType: Prefix
      - host: www.mosdac-ai.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: mosdac-ai-tls
        hosts:
          - mosdac-ai.com
          - www.mosdac-ai.com
          
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
      
  env:
    - name: REACT_APP_API_URL
      value: "https://api.mosdac-ai.com"

streamlit:
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - host: dashboard.mosdac-ai.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: dashboard-mosdac-ai-tls
        hosts:
          - dashboard.mosdac-ai.com

postgresql:
  auth:
    existingSecret: "postgres-secret"
  architecture: replication
  primary:
    persistence:
      enabled: true
      size: 500Gi
      storageClass: "gp3"
    resources:
      limits:
        cpu: 8000m
        memory: 16Gi
      requests:
        cpu: 4000m
        memory: 8Gi
  readReplicas:
    replicaCount: 2
    persistence:
      enabled: true
      size: 500Gi
    resources:
      limits:
        cpu: 4000m
        memory: 8Gi
      requests:
        cpu: 2000m
        memory: 4Gi

redis:
  auth:
    existingSecret: "redis-secret"
  architecture: replication
  master:
    persistence:
      enabled: true
      size: 100Gi
      storageClass: "gp3"
    resources:
      limits:
        cpu: 2000m
        memory: 8Gi
      requests:
        cpu: 1000m
        memory: 4Gi
  replica:
    replicaCount: 2
    persistence:
      enabled: true
      size: 100Gi
    resources:
      limits:
        cpu: 1000m
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 2Gi

neo4j:
  neo4j:
    passwordFromSecret: "neo4j-secret"
  core:
    numberOfServers: 3
    persistentVolume:
      size: 1000Gi
      storageClass: "gp3"
    resources:
      cpu: "8"
      memory: "32Gi"

monitoring:
  enabled: true
  
  prometheus:
    server:
      persistentVolume:
        enabled: true
        size: 200Gi
        storageClass: "gp3"
      resources:
        limits:
          cpu: 4000m
          memory: 8Gi
        requests:
          cpu: 2000m
          memory: 4Gi
          
  grafana:
    adminPassword: ""  # Set from secret
    persistence:
      enabled: true
      size: 50Gi
      storageClass: "gp3"

networkPolicy:
  enabled: true

podSecurityPolicy:
  enabled: true

# Production node affinity
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/arch
          operator: In
          values:
          - amd64
        - key: node-type
          operator: In
          values:
          - production

# Production tolerations
tolerations:
  - key: "production"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"
