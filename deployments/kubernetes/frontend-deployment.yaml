apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: mosdac-ai-navigator
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
        app.kubernetes.io/component: web
        app.kubernetes.io/part-of: mosdac-ai-navigator
      annotations:
        checksum/config: "" # Will be populated by deployment tools
    spec:
      serviceAccountName: frontend-sa
      imagePullSecrets:
        - name: registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: frontend
          image: ghcr.io/gravitasops/mosdac-ai/frontend:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: NODE_ENV
              value: "production"
            - name: REACT_APP_API_URL
              value: "https://api.mosdac-ai.com"
            - name: REACT_APP_VERSION
              valueFrom:
                configMapKeyRef:
                  name: mosdac-ai-config
                  key: APP_VERSION
            - name: REACT_APP_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: mosdac-ai-config
                  key: ENVIRONMENT
          resources:
            requests:
              memory: "512Mi"
              cpu: "100m"
              ephemeral-storage: "1Gi"
            limits:
              memory: "1Gi"
              cpu: "500m"
              ephemeral-storage: "2Gi"
          livenessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
            successThreshold: 1
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: nginx-cache
              mountPath: /var/cache/nginx
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      volumes:
        - name: tmp
          emptyDir:
            sizeLimit: 100Mi
        - name: nginx-cache
          emptyDir:
            sizeLimit: 100Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - frontend
                topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: mosdac-ai-navigator
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/component: web
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      protocol: TCP
  sessionAffinity: None
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-sa
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/component: service-account
automountServiceAccountToken: false
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: frontend-pdb
  namespace: mosdac-ai
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
