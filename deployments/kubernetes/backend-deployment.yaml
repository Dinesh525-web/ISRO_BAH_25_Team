apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: mosdac-ai-navigator
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: backend
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backend
        app.kubernetes.io/component: api
        app.kubernetes.io/part-of: mosdac-ai-navigator
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
        checksum/config: "" # Will be populated by deployment tools
    spec:
      serviceAccountName: backend-sa
      imagePullSecrets:
        - name: registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: backend
          image: ghcr.io/gravitasops/mosdac-ai/backend:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: ENVIRONMENT
              value: "production"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: mosdac-ai-secrets
                  key: DATABASE_URL
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: mosdac-ai-secrets
                  key: REDIS_URL
            - name: NEO4J_URI
              valueFrom:
                secretKeyRef:
                  name: mosdac-ai-secrets
                  key: NEO4J_URI
            - name: NEO4J_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mosdac-ai-secrets
                  key: NEO4J_PASSWORD
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: mosdac-ai-secrets
                  key: OPENAI_API_KEY
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: mosdac-ai-secrets
                  key: SECRET_KEY
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: mosdac-ai-secrets
                  key: SENTRY_DSN
                  optional: true
          envFrom:
            - configMapRef:
                name: mosdac-ai-config
          resources:
            requests:
              memory: "2Gi"
              cpu: "500m"
              ephemeral-storage: "10Gi"
            limits:
              memory: "4Gi"
              cpu: "2"
              ephemeral-storage: "20Gi"
          livenessProbe:
            httpGet:
              path: /api/v1/health/
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /api/v1/health/
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /api/v1/health/
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
            successThreshold: 1
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            - name: data
              mountPath: /app/data
            - name: tmp
              mountPath: /tmp
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      volumes:
        - name: logs
          emptyDir:
            sizeLimit: 1Gi
        - name: data
          persistentVolumeClaim:
            claimName: backend-data-pvc
        - name: tmp
          emptyDir:
            sizeLimit: 1Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - backend
                topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: backend
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: mosdac-ai-navigator
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: api
  ports:
    - name: http
      port: 8000
      targetPort: 8000
      protocol: TCP
  sessionAffinity: None
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend-sa
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: service-account
automountServiceAccountToken: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-data-pvc
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp3
  resources:
    requests:
      storage: 50Gi
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-pdb
  namespace: mosdac-ai
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: backend
