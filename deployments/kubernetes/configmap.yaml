apiVersion: v1
kind: ConfigMap
metadata:
  name: mosdac-ai-config
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: mosdac-ai-navigator
    app.kubernetes.io/component: config
data:
  # Application Configuration
  APP_NAME: "MOSDAC AI Knowledge Navigator"
  APP_VERSION: "1.0.0"
  ENVIRONMENT: "production"
  DEBUG: "false"
  
  # API Configuration
  API_V1_STR: "/api/v1"
  BACKEND_HOST: "0.0.0.0"
  BACKEND_PORT: "8000"
  FRONTEND_PORT: "3000"
  
  # CORS Configuration
  ALLOWED_ORIGINS: "http://localhost:3000,http://localhost:8501,https://mosdac-ai.com"
  
  # Database Configuration
  DATABASE_POOL_SIZE: "20"
  DATABASE_MAX_OVERFLOW: "30"
  
  # Redis Configuration
  REDIS_CACHE_TTL: "3600"
  
  # Neo4j Configuration
  NEO4J_DATABASE: "mosdac"
  NEO4J_USERNAME: "neo4j"
  
  # OpenAI Configuration
  OPENAI_MODEL: "gpt-4-turbo-preview"
  OPENAI_TEMPERATURE: "0.1"
  OPENAI_MAX_TOKENS: "2000"
  
  # MOSDAC Configuration
  MOSDAC_BASE_URL: "https://www.mosdac.gov.in"
  SCRAPING_DELAY: "1.0"
  SCRAPING_RETRY_TIMES: "3"
  SCRAPING_CONCURRENT_REQUESTS: "8"
  
  # Embeddings Configuration
  EMBEDDING_MODEL: "sentence-transformers/all-MiniLM-L6-v2"
  EMBEDDING_DIMENSION: "384"
  CHUNK_SIZE: "1000"
  CHUNK_OVERLAP: "200"
  
  # Logging Configuration
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  LOG_FILE: "/app/logs/application.log"
  
  # Security Configuration
  ACCESS_TOKEN_EXPIRE_MINUTES: "30"
  REFRESH_TOKEN_EXPIRE_MINUTES: "43200"
  ALGORITHM: "HS256"
  
  # Rate Limiting
  RATE_LIMIT_PER_MINUTE: "100"
  RATE_LIMIT_BURST: "10"
  
  # Monitoring
  PROMETHEUS_ENABLED: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: mosdac-ai-navigator
    app.kubernetes.io/component: nginx-config
data:
  nginx.conf: |
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 100m;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        upstream backend {
            server backend-service:8000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        upstream frontend {
            server frontend-service:3000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
        
        server {
            listen 80;
            server_name _;
            
            # Frontend routes
            location / {
                limit_req zone=general burst=50 nodelay;
                
                proxy_pass http://frontend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Connection "";
                proxy_http_version 1.1;
                
                # Caching for static assets
                location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                    proxy_pass http://frontend;
                }
            }
            
            # API routes
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Connection "";
                proxy_http_version 1.1;
                
                # WebSocket support
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                
                # Timeouts
                proxy_connect_timeout 60s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
            }
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Metrics endpoint (internal only)
            location /metrics {
                allow 10.0.0.0/8;
                deny all;
                proxy_pass http://backend/metrics;
            }
        }
    }
