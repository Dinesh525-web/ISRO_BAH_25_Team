apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: mosdac-ai-navigator
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/component: cache
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: cache
        app.kubernetes.io/part-of: mosdac-ai-navigator
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
    spec:
      serviceAccountName: redis-sa
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          command:
            - redis-server
            - /etc/redis/redis.conf
          env:
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mosdac-ai-secrets
                  key: REDIS_PASSWORD
                  optional: true
          volumeMounts:
            - name: redis-storage
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis
          resources:
            requests:
              memory: "1Gi"
              cpu: "200m"
              ephemeral-storage: "1Gi"
            limits:
              memory: "2Gi"
              cpu: "500m"
              ephemeral-storage: "2Gi"
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
        - name: redis-exporter
          image: oliver006/redis_exporter:v1.53.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: metrics
              containerPort: 9121
              protocol: TCP
          env:
            - name: REDIS_ADDR
              value: "redis://127.0.0.1:6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mosdac-ai-secrets
                  key: REDIS_PASSWORD
                  optional: true
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
        - name: redis-config
          configMap:
            name: redis-config
            defaultMode: 0644
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: mosdac-ai-navigator
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      protocol: TCP
    - name: metrics
      port: 9121
      targetPort: 9121
      protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-sa
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: service-account
automountServiceAccountToken: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp3
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: config
data:
  redis.conf: |
    # Redis Configuration for MOSDAC AI
    
    # Network
    bind 0.0.0.0
    port 6379
    protected-mode no
    
    # General
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    
    # Logging
    loglevel notice
    logfile ""
    syslog-enabled no
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    
    # AOF
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    
    # Memory Management
    maxmemory 1.5gb
    maxmemory-policy allkeys-lru
    maxmemory-samples 5
    
    # Clients
    timeout 0
    tcp-keepalive 300
    
    # Security
    # requirepass will be set via environment if REDIS_PASSWORD is provided
    
    # Performance
    tcp-backlog 511
    databases 16
    
    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    
    # Latency monitoring
    latency-monitor-threshold 100
    
    # Client output buffer limits
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    
    # Threaded I/O
    io-threads 4
    io-threads-do-reads yes
