apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: neo4j
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: neo4j
    app.kubernetes.io/component: graph-database
    app.kubernetes.io/part-of: mosdac-ai-navigator
spec:
  serviceName: neo4j-service
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: neo4j
      app.kubernetes.io/component: graph-database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: neo4j
        app.kubernetes.io/component: graph-database
        app.kubernetes.io/part-of: mosdac-ai-navigator
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2004"
    spec:
      serviceAccountName: neo4j-sa
      securityContext:
        runAsUser: 7474
        runAsGroup: 7474
        fsGroup: 7474
      containers:
        - name: neo4j
          image: neo4j:5.14-community
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 7474
              protocol: TCP
            - name: bolt
              containerPort: 7687
              protocol: TCP
            - name: metrics
              containerPort: 2004
              protocol: TCP
          env:
            - name: NEO4J_AUTH
              valueFrom:
                secretKeyRef:
                  name: neo4j-secret
                  key: NEO4J_AUTH
            - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
              value: "yes"
            # Memory settings
            - name: NEO4J_dbms_memory_heap_initial__size
              value: "2G"
            - name: NEO4J_dbms_memory_heap_max__size
              value: "4G"
            - name: NEO4J_dbms_memory_pagecache_size
              value: "2G"
            # Network settings
            - name: NEO4J_dbms_default__listen__address
              value: "0.0.0.0"
            - name: NEO4J_dbms_default__advertised__address
              value: "neo4j-service.mosdac-ai.svc.cluster.local"
            # Security settings
            - name: NEO4J_dbms_security_procedures_unrestricted
              value: "gds.*,apoc.*"
            - name: NEO4J_dbms_security_procedures_allowlist
              value: "gds.*,apoc.*"
            # Performance settings
            - name: NEO4J_dbms_connector_bolt_listen__address
              value: "0.0.0.0:7687"
            - name: NEO4J_dbms_connector_http_listen__address
              value: "0.0.0.0:7474"
            # Logging
            - name: NEO4J_dbms_logs_query_enabled
              value: "true"
            - name: NEO4J_dbms_logs_query_threshold
              value: "1s"
            # Metrics
            - name: NEO4J_metrics_enabled
              value: "true"
            - name: NEO4J_metrics_prometheus_enabled
              value: "true"
            - name: NEO4J_metrics_prometheus_endpoint
              value: "0.0.0.0:2004"
            # Plugins
            - name: NEO4J_PLUGINS
              value: '["apoc", "graph-data-science"]'
            # Database configuration
            - name: NEO4J_dbms_default__database
              value: "mosdac"
          volumeMounts:
            - name: neo4j-data
              mountPath: /data
            - name: neo4j-logs
              mountPath: /logs
            - name: neo4j-plugins
              mountPath: /plugins
            - name: neo4j-config
              mountPath: /var/lib/neo4j/conf/neo4j.conf
              subPath: neo4j.conf
          resources:
            requests:
              memory: "4Gi"
              cpu: "1"
              ephemeral-storage: "2Gi"
            limits:
              memory: "8Gi"
              cpu: "4"
              ephemeral-storage: "4Gi"
          livenessProbe:
            httpGet:
              path: /
              port: 7474
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: 7474
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /
              port: 7474
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
            successThreshold: 1
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: neo4j-config
          configMap:
            name: neo4j-config
        - name: neo4j-plugins
          emptyDir:
            sizeLimit: 1Gi
      initContainers:
        - name: init-plugins
          image: curlimages/curl:8.4.0
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "Downloading Neo4j plugins..."
              
              # Download APOC
              curl -L -o /plugins/apoc-5.14.0-core.jar \
                https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/5.14.0/apoc-5.14.0-core.jar
              
              # Download Graph Data Science
              curl -L -o /plugins/neo4j-graph-data-science-2.5.3.jar \
                https://github.com/neo4j/graph-data-science/releases/download/2.5.3/neo4j-graph-data-science-2.5.3.jar
              
              echo "Plugins downloaded successfully"
              ls -la /plugins/
          volumeMounts:
            - name: neo4j-plugins
              mountPath: /plugins
          securityContext:
            runAsUser: 7474
            runAsGroup: 7474
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
  volumeClaimTemplates:
    - metadata:
        name: neo4j-data
        labels:
          app.kubernetes.io/name: neo4j
          app.kubernetes.io/component: graph-database
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: gp3
        resources:
          requests:
            storage: 100Gi
    - metadata:
        name: neo4j-logs
        labels:
          app.kubernetes.io/name: neo4j
          app.kubernetes.io/component: graph-database
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: gp3
        resources:
          requests:
            storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: neo4j-service
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: neo4j
    app.kubernetes.io/component: graph-database
    app.kubernetes.io/part-of: mosdac-ai-navigator
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: neo4j
    app.kubernetes.io/component: graph-database
  ports:
    - name: http
      port: 7474
      targetPort: 7474
      protocol: TCP
    - name: bolt
      port: 7687
      targetPort: 7687
      protocol: TCP
    - name: metrics
      port: 2004
      targetPort: 2004
      protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: neo4j-sa
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: neo4j
    app.kubernetes.io/component: service-account
automountServiceAccountToken: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: neo4j-config
  namespace: mosdac-ai
  labels:
    app.kubernetes.io/name: neo4j
    app.kubernetes.io/component: config
data:
  neo4j.conf: |
    # Neo4j Configuration for MOSDAC AI
    
    # Network
    server.default_listen_address=0.0.0.0
    server.default_advertised_address=neo4j-service.mosdac-ai.svc.cluster.local
    
    # Database
    server.databases.default_to_read_only=false
    dbms.default_database=mosdac
    
    # Memory
    server.memory.heap.initial_size=2G
    server.memory.heap.max_size=4G
    server.memory.pagecache.size=2G
    
    # Connectors
    server.bolt.enabled=true
    server.bolt.listen_address=0.0.0.0:7687
    server.http.enabled=true
    server.http.listen_address=0.0.0.0:7474
    server.https.enabled=false
    
    # Security
    dbms.security.auth_enabled=true
    dbms.security.procedures.unrestricted=gds.*,apoc.*
    dbms.security.procedures.allowlist=gds.*,apoc.*
    
    # Performance
    dbms.tx_log.rotation.retention_policy=1 days
    dbms.checkpoint.interval.time=15m
    dbms.checkpoint.interval.tx=100000
    
    # Query logging
    dbms.logs.query.enabled=true
    dbms.logs.query.threshold=1000ms
    dbms.logs.query.parameter_logging_enabled=true
    
    # Metrics
    server.metrics.enabled=true
    server.metrics.prometheus.enabled=true
    server.metrics.prometheus.endpoint=0.0.0.0:2004
    
    # Plugins
    dbms.security.procedures.whitelist=apoc.*,gds.*
    
    # GDS Configuration
    gds.enterprise.license_file=
    
    # APOC Configuration
    apoc.export.file.enabled=true
    apoc.import.file.enabled=true
    apoc.import.file.use_neo4j_config=true
    
    # Cypher
    cypher.default_language_version=5
    cypher.hints.error=true
    
    # Transaction
    dbms.transaction.timeout=60s
    dbms.transaction.bookmark_ready_timeout=30s
    
    # Index
    db.index_sampling.background_enabled=true
    db.index_sampling.update_percentage=5
