# Multi-stage build for React frontend
FROM node:18-alpine as builder

WORKDIR /build

# Copy package files first for better caching
COPY src/frontend/react_app/package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY src/frontend/react_app/ ./

# Build arguments
ARG REACT_APP_API_URL=http://localhost:8000
ARG REACT_APP_VERSION=1.0.0
ARG NODE_ENV=production

ENV REACT_APP_API_URL=$REACT_APP_API_URL
ENV REACT_APP_VERSION=$REACT_APP_VERSION
ENV NODE_ENV=$NODE_ENV

# Build the application
RUN npm run build

# Production stage with nginx
FROM nginx:1.25-alpine as production

# Install curl for health checks
RUN apk add --no-cache curl

# Create non-root user
RUN addgroup -g 1001 -S nginxuser && \
    adduser -S -D -H -u 1001 -h /var/cache/nginx -s /sbin/nologin -G nginxuser nginxuser

# Copy built application
COPY --from=builder /build/build /usr/share/nginx/html

# Copy nginx configuration
COPY deployments/docker/nginx/default.conf /etc/nginx/conf.d/default.conf
COPY deployments/docker/nginx/nginx.conf /etc/nginx/nginx.conf

# Create directories and set permissions
RUN mkdir -p /var/cache/nginx /var/run/nginx /var/log/nginx && \
    chown -R nginxuser:nginxuser /var/cache/nginx /var/run/nginx /var/log/nginx && \
    chown -R nginxuser:nginxuser /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Switch to non-root user
USER nginxuser

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/ || exit 1

# Expose port
EXPOSE 3000

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
